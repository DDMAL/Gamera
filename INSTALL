==============================
Building and installing Gamera
==============================

Gamera requires that you install the following software FIRST:

**Python**
	For Linux (and other Unices):
	    Python 2.2 and 2.3 are supported.

	    You will need to have the headers (but not the complete
   	    source) to build Gamera from source code.  Some Linux
	    distributions, such as SuSE and RedHat, include these as a
 	    separate package (eg. ``python-dev``).

	For Microsoft Windows:
	    Only Python 2.3 is supported, since it has a much better
	    installer.
	
	For Mac OS-X:
	    Only Python 2.3 is supported, and only on OS-X 10.3 with
	    X11 installed.

	Make sure you have the latest
	service release, since those
	usually	contain important bug and security fixes.

**wxPython**
	You must use version 2.4.x or greater.  2.3.x is no longer
	supported.

	wxPython tends to change dramatically with even minor version
	increments (argh!).  I'm currently using 2.4.2.4, but I don't
	have the resources to support all different minor versions, so
	if you're having GUI-related problems, I would recommend
	downloading that **exact** version before submitting a bug report.


Microsoft Windows
=================

Installing using the Windows installer
--------------------------------------

If you got the Windows installer, simply run it to
install Gamera.  Unfortunately, we're having trouble getting the
startup script (``gamera_gui.py``) to be installed by the installer, so 
you'll have to install that yourself.  Do a ``Search...``
for it after installing Gamera.  You can place it anywhere,
(such as the Desktop) and simply double-click it to start Gamera.

.. note:: Windows is not our primary development environment, and the
   Windows installer tends to lag a version or two behind and may not
   be as thoroughly tested.  Anyone want to become the official
   Windows builder/tester?

Installing from source
----------------------

Currently, Gamera can be built using the Cygwin/MingW32/GNU toolset.
Support for Microsoft Visual Studio is coming.

Cygwin/Mingw32
``````````````

Use the installer from http://www.cygwin.com/ to install Cygwin,
including a g++ and the MingW32 libraries.  Compiling Gamera against
the Cygwin DLL is theoretically possible, but not supported.  However,
you can compile Gamera using Mingw32, which means there will be no
non-standard Windows runtime dependancies.

Python
``````

You have two options here

Use the Cygwin version Python that is distributed with Cygwin:
   This is the easiest approach, since it behaves most like a Unix
   system.  Skip to the next section for further instructions.

Use the MSVC-built Python from python.org:
   The advantage of this approach is that you can build an installer
   that will work with the "canonical" distribution of Python.
   However, you'll have to do a few preparation steps first.

   Go to the Python/libs directory::
	
	cd [PATH_TO_PYTHON]/libs

   Find your ``pythonXX.dll`` file, where ``XX`` is the version of
   Python you have installed.  This is normally in
   ``C:\WINDOWS\system32\`` or ``C:\winnt\system32\``.

   Make a ``.def`` file from your ``pythonXX.dll``.  (You will need to
   install ``pexports.exe`` from the Cygwin installer)::

  	pexports 'C:\WINDOWS\system32\pythonXX.dll' > pythonXX.def

   Then create a static library (``libpythonXX.a``)::

	dlltool --dllname pythonXX.dll --def
                pythonXX.def --output-lib libpythonXX.a
	
   Now you should be ready to continue below.

Standard Build and Install
``````````````````````````

Gamera is built using the Python-standard Distutils system.  Open a
Cygwin command prompt and type::

  python setup.py build --compiler=mingw32

If you receive the following error (only exhibited under Python 2.3),
distutils is having trouble traversing the Cygwin-based symlink from
``/bin/cc.exe`` to ``/bin/gcc.exe``.  The hacky solution to this
(until this bugfix in distutils is fixed) is to delete the symlink and
make a real copy (at the expense of a little disk space)::

  rm /bin/cc.exe
  cp /bin/gcc.exe /bin/cc.exe

If you just want to install Gamera without the ability to uninstall::

  python setup.py install

If you'd like a real Windows installer, including uninstallation
support::

  python setup.py build --compiler=mingw32 bdist_wininst
  dist/gamera-X.X.X-win32.exe

Running
```````

If you chose to build the installer, double-click on the Gamera icon
on your desktop to run Gamera.

Otherwise, run the ``gamera_gui.py`` script located at the root of the source
tree::

  python gamera_gui.py

This file can be copied anywhere (such as the Desktop or the
Start Menu) and double-clicked to run Gamera.

Linux (and other \*nix)
=======================

Install binary packages for Python and wxPython (see correct versions
at top of this document.)

In addition, your Linux installation should also have:

- libtiff 3.5.x
- libpng 2.2.x

Standard Build and Install
--------------------------

Gamera is built using the Python-standard Distutils system.  Open a
terminal and type::

  python setup.py build
  sudo python setup.py install

Running
-------

Run the ``gamera_gui.py`` script located at the root of the source
tree.  This file can be copied anywhere (such as the Desktop)
and double-clicked to run Gamera.


Mac OS-X
========

OS-X support can be considered working but preliminary at this point.
Gamera will only run on Panther (10.3).  We do not plan to support
earlier versions.  You will need to install the GNU development tools, X11,
and Python 2.3.

Prerequisites
-------------

wxPython comes in two flavors for OS-X: a native Carbon-based one that
follows the look-and-feel of OS-X, and a version built on top of
Gtk+/X11.  The native Carbon version is currently too incomplete to be
usable for Gamera.  Unfortunately, there are no installer packages
available for the Gtk+/X11 version on the wxPython website.  You have
two options:

1. Install fink and then build the package wxPython-Py23, which is
   currently in the unstable branch, (and its dependencies) from
   source.  You will then need to use the fink version of Python (not
   the one that Apple provides) to carry out the instructions below.

2. Use the unofficial wxPython/Gtk/X11 installer on the Gamera website (coming
   soon).  It is not clear whether this installer will work for all
   Panther installations.

Standard Build and Install
--------------------------

Gamera is built using the Python-standard Distutils system.  

Make sure you're using the "right" Python.  If you compiled wxPython
yourself, you will need to use the fink Python.  If you used the
unofficial wxPython/Gtk/X11 installer, you need to use the Python
included with OS-X 10.3.  In a terminal, type::

  whereis python

If this is under ``/sw/fink``, your default Python is the fink
Python.  If not, you're default Python is probably the OS-X default.

To build Gamera, open a X11 terminal and type::

  python setup.py build

and then to install (you'll need to have admin priviledges)::
 
  sudo python setup.py install

Running
-------

Run the ``gamera_gui.py`` script located at the root of the source
tree.  This file can be copied anywhere (such as the Desktop)
and double-clicked to run Gamera.
