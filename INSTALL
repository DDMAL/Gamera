==============================
Building and installing Gamera
==============================

Microsoft Windows
=================

Installing from source
----------------------

Currently, Gamera can be built using the Cygwin/MingW32/GNU toolset.

The "officially supported" configuration, (i.e. the one that the
Gamera developers use) is to use the MingW32 compiler installed inside
of Cygwin to build for the official Python.org Python.  Other
configurations are possible, such as Microsoft Visual Studio or the
standalone Mingw32 toolchain, but they are not tested on a regular
basis.  If you have success with other configurations, please consider
contributing your experiences to this documentation.

Prerequisites
`````````````

- Python 2.4.x or later (only the distribution from python.org has been tested)

- wxPython 2.6.x or later (wxPython 2.8.x or later recommended for
  full functionality)

Cygwin/Mingw32
``````````````

Use the installer from http://www.cygwin.com/ to install Cygwin,
including the ``g++-mingw32`` compiler and the ``MingW32`` libraries.
If you plan to track development of Gamera, you will probably also
want to install ``subversion``.

Standard Build and Install
``````````````````````````

The important thing to note here is that we are using Cygwin's Mingw32
compiler to build for the standard (non-Cygwin) Python from
python.org.  After a clean install of Cygwin, typing 'python' will
start up Cygwin's version of Python, not the one from python.org.
Therefore, you will want to add the standard Python to your Cygwin
PATH using the command (assuming you installed Python in standard location)::

  export PATH=/cygdrive/c/Python25/:$PATH

Ensure you are using the correct Python by typing::

  which python

The result should be ``/cygdrive/c/Python25/python.exe``, not
``/usr/bin/python``.

Gamera is built using the Python-standard Distutils system.  Open a
Cygwin command prompt and type::

  python setup.py build --compiler=mingw32

If you just want to install Gamera without the ability to uninstall::

  python setup.py build --compiler=mingw32 install

If you'd like a real Windows installer, including uninstallation
support, use the Python Distutils installer generator::

  python setup.py build --compiler=mingw32 bdist_wininst

Then run::

  dist/gamera-X.X.X-win32.exe


Linux (and other \*nix)
=======================

Prerequisites
-------------

- Python 2.3 and later are supported, though Python 2.4 or later is
  recommended.

  You will need to have the headers (but not the complete source) to
  build Gamera from source code.  Most Linux distributions include
  these as a separate package (eg. ``python-dev`` or ``python-devel``).

- wxPython 2.4.x or later (wxPython 2.8.x or later recommended for
  full functionality).

- ``gcc`` version 3.1 or later.

- libtiff 3.5.x or later

- libpng 1.2.x or later

Standard Build and Install
--------------------------

Gamera is built using the Python-standard Distutils system.  Open a
terminal and type::

  python setup.py build
  sudo python setup.py install

Installing without root priviledges
-----------------------------------

.. _without_root:

If you do not have root access to your machine, you can make a local
installation of Gamera.

A quick-and-easy way to do this is to use the ``virtual_python.py``
script available here__, and then follow the standard installation
instructions (without using sudo)::

  python setup.py build
  python setup.py install

.. __: http://peak.telecommunity.com/DevCenter/EasyInstall#creating-a-virtual-python

Alternatively, you can set up a local installation by hand.

Make a local python module directory somewhere that you have write
priviledges (such as your home directory)::

  mkdir ~/python

From the Gamera build directory, install Gamera into that directory::

  python setup.py install --home=~/python

Set up an environment variables so Python can find stuff there (you
may want to add this to your ~/.bash_profile file)::

  export PYTHONPATH=~/python/lib/python

Add the local Python scripts directory to your path::

  export PATH=~/python/bin:$PATH

Now you should be able to run the ``gamera_gui`` script from the
command line.

Running
-------

Run the ``gamera_gui`` script, which should have installed to
``/usr/local/bin``.  This file can also be copied anywhere (such as
the Desktop) and double-clicked to run Gamera.

.. note:: Running the script from the root of the source tree will not
  work, since it will not be able to find the compiled version of Gamera.

Mac OS-X
========

Earlier versions of Gamera ran on OS-X by using X11 as an emulation of
a standard Unix environment.  The current SVN version of Gamera now
uses Cocoa, and feels much more like a standard Macintosh
application.  Please follow the instructions for *either* X11 or Cocoa
install below.

X11 build
---------

Prerequisites
`````````````

- Mac OS-X 10.4 (Tiger) or presumably later

- Python 2.3 (including the version included).

- wxPython-GTK 2.4.x or later

  Since there is no official build of the Gtk+/X11 version for Mac
  OS-X, I have made one available in the Gamera SourceForge Files
  section.

- XCode.  The version of XCode that shipped on the Tiger installation
  DVD will not work if you plan to use a newer version of Python
  downloaded from python.org.  XCode 2.4.1, may be downloaded from
  http://developer.apple.com/tools/xcode .

- X11.  This is available on the Tiger installation DVD.  You should
  also use Software Update to update X11 to the latest version.

Standard Build and Install
``````````````````````````

Download and install the unoffical wxPython-Gtk-X11 distribution from
the Gamera Files section on SourceForge.

  Alternatively, you can install fink and then build the package
  wxPython-Py23, which is currently in the unstable branch, (and its
  dependencies) from source.  You will then need to use the fink
  version of Python (not the one that Apple provides) to carry out the
  instructions below.

Gamera is built using the Python-standard Distutils system.

To build Gamera, open a X11 terminal and type::

  python setup.py build

and then to install (you'll need to have admin priviledges)::

  sudo python setup.py install

The scripts can be installed by::

  sudo python setup.py install_scripts -d /usr/bin

.. note:: The ``-d /usr/bin/`` installs the scripts in a reasonable
  place on the PATH.  If you do not specify it, the scripts are by
  default installed to
  ``/System/Library/Frameworks/Python.framework/Versions/2.3/bin``.

Installing without root priviledges
```````````````````````````````````

The instructions for `installing without root (administrator)
priviledges`__ can also be used on Mac OS-X.

__ without_root_

Running
```````

Start an X11 terminal and run the ``gamera_gui`` script.

.. note:: Running the script from the root of the source tree will not
  work, since it will not be able to find the compiled version of
  Gamera.


Native (Cocoa) build
--------------------

Prerequisites
`````````````

- Mac OS-X 10.4 (Tiger) or presumably later

- Python 2.5 downloaded from http://www.python.org/ .  The Python 2.3
  included with OS-X Tiger will not work.

- wxPython 2.8.x or later, downloaded from
  http://www.wxpython.org/ .

- XCode 2.4.1, downloaded from
  http://developer.apple.com/tools/xcode .  The version that shipped
  on the Tiger installation DVD will not work.

Standard Build and Install
``````````````````````````

Gamera is built using the Python-standard Distutils system.

To build Gamera, open a X11 terminal and type::

  python setup.py build

and then to install (you'll need to have admin priviledges)::

  sudo python setup.py install

The scripts can be installed by::

  sudo python setup.py install_scripts -d /usr/bin

.. note:: The ``-d /usr/bin/`` installs the scripts in a reasonable
  place on the PATH.  If you do not specify it, the scripts are by
  default installed to
  ``/System/Library/Frameworks/Python.framework/Versions/2.3/bin``.

Installing without root priviledges
```````````````````````````````````

The instructions for `installing without root (administrator)
priviledges`__ can also be used on Mac OS-X.

__ without_root_

Running
```````

Start the Terminal application and run the ``gamera_gui`` script.

.. note:: Running the script from the root of the source tree will not
  work, since it will not be able to find the compiled version of
  Gamera.

